<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.niule.znxj.web.dao.NfcinfoMapper" >
  <resultMap id="BaseResultMap" type="com.niule.znxj.web.model.Nfcinfo" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="customid" property="customid" jdbcType="VARCHAR" />
    <result column="desccontent" property="desccontent" jdbcType="VARCHAR" />
    <result column="unitcode" property="unitcode" jdbcType="VARCHAR" />
    <result column="longitude" property="longitude" jdbcType="VARCHAR" />
    <result column="latitude" property="latitude" jdbcType="VARCHAR" />
    <result column="enabletime" property="enabletime" jdbcType="TIMESTAMP" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="areaid" property="areaid" jdbcType="BIGINT" />
    <result column="equipmentid" property="equipmentid" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, customid, desccontent, unitcode, longitude, latitude, enabletime, state, remark, 
    areaid, equipmentid
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.niule.znxj.web.model.NfcinfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from nfcinfo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from nfcinfo
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from nfcinfo
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.niule.znxj.web.model.NfcinfoExample" >
    delete from nfcinfo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.niule.znxj.web.model.Nfcinfo" >
    insert into nfcinfo (id, customid, desccontent, 
      unitcode, longitude, latitude, 
      enabletime, state, remark, 
      areaid, equipmentid)
    values (#{id,jdbcType=BIGINT}, #{customid,jdbcType=VARCHAR}, #{desccontent,jdbcType=VARCHAR}, 
      #{unitcode,jdbcType=VARCHAR}, #{longitude,jdbcType=VARCHAR}, #{latitude,jdbcType=VARCHAR}, 
      #{enabletime,jdbcType=TIMESTAMP}, #{state,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, 
      #{areaid,jdbcType=BIGINT}, #{equipmentid,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.niule.znxj.web.model.Nfcinfo" >
    insert into nfcinfo
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="customid != null" >
        customid,
      </if>
      <if test="desccontent != null" >
        desccontent,
      </if>
      <if test="unitcode != null" >
        unitcode,
      </if>
      <if test="longitude != null" >
        longitude,
      </if>
      <if test="latitude != null" >
        latitude,
      </if>
      <if test="enabletime != null" >
        enabletime,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="areaid != null" >
        areaid,
      </if>
      <if test="equipmentid != null" >
        equipmentid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="customid != null" >
        #{customid,jdbcType=VARCHAR},
      </if>
      <if test="desccontent != null" >
        #{desccontent,jdbcType=VARCHAR},
      </if>
      <if test="unitcode != null" >
        #{unitcode,jdbcType=VARCHAR},
      </if>
      <if test="longitude != null" >
        #{longitude,jdbcType=VARCHAR},
      </if>
      <if test="latitude != null" >
        #{latitude,jdbcType=VARCHAR},
      </if>
      <if test="enabletime != null" >
        #{enabletime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="areaid != null" >
        #{areaid,jdbcType=BIGINT},
      </if>
      <if test="equipmentid != null" >
        #{equipmentid,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.niule.znxj.web.model.NfcinfoExample" resultType="java.lang.Integer" >
    select count(*) from nfcinfo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update nfcinfo
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.customid != null" >
        customid = #{record.customid,jdbcType=VARCHAR},
      </if>
      <if test="record.desccontent != null" >
        desccontent = #{record.desccontent,jdbcType=VARCHAR},
      </if>
      <if test="record.unitcode != null" >
        unitcode = #{record.unitcode,jdbcType=VARCHAR},
      </if>
      <if test="record.longitude != null" >
        longitude = #{record.longitude,jdbcType=VARCHAR},
      </if>
      <if test="record.latitude != null" >
        latitude = #{record.latitude,jdbcType=VARCHAR},
      </if>
      <if test="record.enabletime != null" >
        enabletime = #{record.enabletime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.areaid != null" >
        areaid = #{record.areaid,jdbcType=BIGINT},
      </if>
      <if test="record.equipmentid != null" >
        equipmentid = #{record.equipmentid,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update nfcinfo
    set id = #{record.id,jdbcType=BIGINT},
      customid = #{record.customid,jdbcType=VARCHAR},
      desccontent = #{record.desccontent,jdbcType=VARCHAR},
      unitcode = #{record.unitcode,jdbcType=VARCHAR},
      longitude = #{record.longitude,jdbcType=VARCHAR},
      latitude = #{record.latitude,jdbcType=VARCHAR},
      enabletime = #{record.enabletime,jdbcType=TIMESTAMP},
      state = #{record.state,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR},
      areaid = #{record.areaid,jdbcType=BIGINT},
      equipmentid = #{record.equipmentid,jdbcType=BIGINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.niule.znxj.web.model.Nfcinfo" >
    update nfcinfo
    <set >
      <if test="customid != null" >
        customid = #{customid,jdbcType=VARCHAR},
      </if>
      <if test="desccontent != null" >
        desccontent = #{desccontent,jdbcType=VARCHAR},
      </if>
      <if test="unitcode != null" >
        unitcode = #{unitcode,jdbcType=VARCHAR},
      </if>
      <if test="longitude != null" >
        longitude = #{longitude,jdbcType=VARCHAR},
      </if>
      <if test="latitude != null" >
        latitude = #{latitude,jdbcType=VARCHAR},
      </if>
      <if test="enabletime != null" >
        enabletime = #{enabletime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="areaid != null" >
        areaid = #{areaid,jdbcType=BIGINT},
      </if>
      <if test="equipmentid != null" >
        equipmentid = #{equipmentid,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.niule.znxj.web.model.Nfcinfo" >
    update nfcinfo
    set customid = #{customid,jdbcType=VARCHAR},
      desccontent = #{desccontent,jdbcType=VARCHAR},
      unitcode = #{unitcode,jdbcType=VARCHAR},
      longitude = #{longitude,jdbcType=VARCHAR},
      latitude = #{latitude,jdbcType=VARCHAR},
      enabletime = #{enabletime,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      areaid = #{areaid,jdbcType=BIGINT},
      equipmentid = #{equipmentid,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="findByPageNfc" resultMap="BaseResultMap" parameterType="map">
    <!--select-->
    <!--<include refid="Base_Column_List" />-->
    <!--from nfcinfo where 1=1 limit #{0},#{1}-->

    select
    <include refid="Base_Column_List" />
    from nfcinfo nfc
    left join areainfo a on a.id=nfc.areaid
    left join equipmentinfo e on e.id=nfc.equipmentid
    left join siteareainfo s on s.id=a.plant
    where 1=1
    <if test="siteid!=null and siteid!=''">
      and s.id = #{siteid}
    </if>
    UNION
    select <include refid="Base_Column_List" />
    from nfcinfo nfc
    left join equipmentinfo e on e.id=nfc.equipmentid
    left join areainfo a on e.areaid=a.id
    left join siteareainfo s on s.id=a.plant
    where 1=1
    <if test="siteid!=null and siteid!=''">
      and s.id = #{siteid}
    </if>
    limit #{page},#{pagesize}
  </select>
  <select id="countNfc" resultType="int">
    select count(nfc.id)
    from nfcinfo nfc
    left join areainfo a on a.id=nfc.areaid
    left join equipmentinfo e on e.id=nfc.equipmentid
    left join siteareainfo s on s.id=a.plant
    where 1=1
    <if test="siteid!=null and siteid!=''">
      and s.id = #{siteid}
    </if>
    UNION
    select count(nfc.id)
    from nfcinfo nfc
    left join equipmentinfo e on e.id=nfc.equipmentid
    left join areainfo a on e.areaid=a.id
    left join siteareainfo s on s.id=a.plant
    <if test="customid!=''">
      and customid like #{customid}
    </if>
  </select>
  <select id="findByPageNfc2" resultMap="BaseResultMap" parameterType="map">
    select t.* from
    (select
    nfc.*
    from nfcinfo nfc
    left join areainfo a on a.id=nfc.areaid
    left join equipmentinfo e on e.id=nfc.equipmentid
    left join siteareainfo s on s.id=a.plant
    where 1=1
    <if test="siteid!=null and siteid!=''">
      and s.id = #{siteid}
    </if>

    UNION
    select nfc.* from nfcinfo nfc
    left join equipmentinfo e on e.id=nfc.equipmentid
    left join areainfo a on e.areaid=a.id
    left join siteareainfo s on s.id=a.plant
    where 1=1
    <if test="siteid!=null and siteid!=''">
      and s.id = #{siteid}
    </if>
    ) t where 1=1
    <if test="customid!=''">
      and t.customid like #{customid}
    </if>
    order by t.id desc

  </select>
  <select id="countNfc2" resultType="int">
    select count(nfc.id)
    from nfcinfo nfc
    left join areainfo a on a.id=nfc.areaid
    left join equipmentinfo e on e.id=nfc.equipmentid
    left join siteareainfo s on s.id=a.plant
    where 1=1
    <if test="siteid!=null and siteid!=''">
      and s.id = #{siteid}
    </if>
    UNION
    select count(nfc.id)
    from nfcinfo nfc
    left join equipmentinfo e on e.id=nfc.equipmentid
    left join areainfo a on e.areaid=a.id
    left join siteareainfo s on s.id=a.plant
    <if test="customid!=''">
      and nfc.customid like #{customid}
    </if>
  </select>
  <select id="queryAllNfc" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from nfcinfo
  </select>
  <update id="updateareaid">
    update nfcinfo
    set areaid=#{0}
    where id=#{1}
  </update>
  <update id="updatebyareaid">
    update nfcinfo
    set areaid=NULL,equipmentid=NULL
    where areaid=#{0}
  </update>
  <update id="updateequipmentid">
    update nfcinfo
    set equipmentid=#{0}
    where id=#{1}
  </update>
  <update id="updatebyequipmentid">
    update nfcinfo
    set areaid=NULL,equipmentid=NULL
    where equipmentid=#{0}
  </update>
</mapper>