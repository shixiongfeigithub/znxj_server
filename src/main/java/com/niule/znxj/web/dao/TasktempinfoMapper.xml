<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.niule.znxj.web.dao.TasktempinfoMapper" >
  <resultMap id="BaseResultMap" type="com.niule.znxj.web.model.Tasktempinfo" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="taskid" property="taskid" jdbcType="BIGINT" />
    <result column="identifyingid" property="task.identifyingid" jdbcType="VARCHAR" />
    <result column="realname" property="user.realname" jdbcType="VARCHAR" />
    <result column="executetime" property="executetime" jdbcType="TIMESTAMP" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="userid" property="userid" jdbcType="BIGINT" />
    <result column="taskcode" property="taskcode" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="operationstate" property="operationstate" jdbcType="INTEGER" />
    <result column="stopstate" property="stopstate" jdbcType="INTEGER" />
    <result column="updatetime" property="updatetime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, taskid, executetime, state, userid, taskcode, type, operationstate, stopstate, 
    updatetime
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.niule.znxj.web.model.TasktempinfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tasktempinfo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from tasktempinfo
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from tasktempinfo
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.niule.znxj.web.model.TasktempinfoExample" >
    delete t1 from tasktempinfo t1
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.niule.znxj.web.model.Tasktempinfo" >
    insert into tasktempinfo (id, taskid, executetime, 
      state, userid, taskcode, 
      type, operationstate, stopstate, 
      updatetime)
    values (#{id,jdbcType=BIGINT}, #{taskid,jdbcType=BIGINT}, #{executetime,jdbcType=TIMESTAMP}, 
      #{state,jdbcType=INTEGER}, #{userid,jdbcType=BIGINT}, #{taskcode,jdbcType=VARCHAR}, 
      #{type,jdbcType=INTEGER}, #{operationstate,jdbcType=INTEGER}, #{stopstate,jdbcType=INTEGER}, 
      #{updatetime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.niule.znxj.web.model.Tasktempinfo" >
    insert into tasktempinfo
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="taskid != null" >
        taskid,
      </if>
      <if test="executetime != null" >
        executetime,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="userid != null" >
        userid,
      </if>
      <if test="taskcode != null" >
        taskcode,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="operationstate != null" >
        operationstate,
      </if>
      <if test="stopstate != null" >
        stopstate,
      </if>
      <if test="updatetime != null" >
        updatetime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="taskid != null" >
        #{taskid,jdbcType=BIGINT},
      </if>
      <if test="executetime != null" >
        #{executetime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=BIGINT},
      </if>
      <if test="taskcode != null" >
        #{taskcode,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="operationstate != null" >
        #{operationstate,jdbcType=INTEGER},
      </if>
      <if test="stopstate != null" >
        #{stopstate,jdbcType=INTEGER},
      </if>
      <if test="updatetime != null" >
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.niule.znxj.web.model.TasktempinfoExample" resultType="java.lang.Integer" >
    select count(*) from tasktempinfo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tasktempinfo
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.taskid != null" >
        taskid = #{record.taskid,jdbcType=BIGINT},
      </if>
      <if test="record.executetime != null" >
        executetime = #{record.executetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.userid != null" >
        userid = #{record.userid,jdbcType=BIGINT},
      </if>
      <if test="record.taskcode != null" >
        taskcode = #{record.taskcode,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.operationstate != null" >
        operationstate = #{record.operationstate,jdbcType=INTEGER},
      </if>
      <if test="record.stopstate != null" >
        stopstate = #{record.stopstate,jdbcType=INTEGER},
      </if>
      <if test="record.updatetime != null" >
        updatetime = #{record.updatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tasktempinfo
    set id = #{record.id,jdbcType=BIGINT},
      taskid = #{record.taskid,jdbcType=BIGINT},
      executetime = #{record.executetime,jdbcType=TIMESTAMP},
      state = #{record.state,jdbcType=INTEGER},
      userid = #{record.userid,jdbcType=BIGINT},
      taskcode = #{record.taskcode,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=INTEGER},
      operationstate = #{record.operationstate,jdbcType=INTEGER},
      stopstate = #{record.stopstate,jdbcType=INTEGER},
      updatetime = #{record.updatetime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.niule.znxj.web.model.Tasktempinfo" >
    update tasktempinfo
    <set >
      <if test="taskid != null" >
        taskid = #{taskid,jdbcType=BIGINT},
      </if>
      <if test="executetime != null" >
        executetime = #{executetime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
        userid = #{userid,jdbcType=BIGINT},
      <if test="taskcode != null" >
        taskcode = #{taskcode,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="operationstate != null" >
        operationstate = #{operationstate,jdbcType=INTEGER},
      </if>
      <if test="stopstate != null" >
        stopstate = #{stopstate,jdbcType=INTEGER},
      </if>
      <if test="updatetime != null" >
        updatetime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.niule.znxj.web.model.Tasktempinfo" >
    update tasktempinfo
    set taskid = #{taskid,jdbcType=BIGINT},
      executetime = #{executetime,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=INTEGER},
      userid = #{userid,jdbcType=BIGINT},
      taskcode = #{taskcode,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      operationstate = #{operationstate,jdbcType=INTEGER},
      stopstate = #{stopstate,jdbcType=INTEGER},
      updatetime = #{updatetime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateTempState" parameterType="Long">
    update tasktempinfo set state =-1 where taskid=#{0}
  </update>
  <update id="updateTempState2" parameterType="Long">
    update tasktempinfo set state =-1 where id=#{0}
  </update>

  <select id="dadiyreport" parameterType="com.niule.znxj.web.model.TasktempinfoExample" resultMap="BaseResultMap">
    select t1.*,t2.identifyingid,u.realname from tasktempinfo t1
    left join taskplaninfo t2 on t1.taskid=t2.id
    left join userinfo u on t1.userid=u.id
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="dadiyreport2" parameterType="com.niule.znxj.web.model.TasktempinfoExample" resultMap="BaseResultMap">
    select * from tasktempinfo t1
    left join taskplaninfo t2 on t1.taskid=t2.id
    where date_format(t1.executetime, '%Y-%m-%d' ) between #{0} and #{1}
  </select>
</mapper>