<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.niule.znxj.web.dao.TerminalinfoMapper" >
  <resultMap id="BaseResultMap" type="com.niule.znxj.web.model.Terminalinfo" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="customid" property="customid" jdbcType="VARCHAR" />
    <result column="hardwaremodel" property="hardwaremodel" jdbcType="VARCHAR" />
    <result column="softversion" property="softversion" jdbcType="VARCHAR" />
    <result column="desccontent" property="desccontent" jdbcType="VARCHAR" />
    <result column="department" property="department" jdbcType="VARCHAR" />
    <result column="authcode" property="authcode" jdbcType="VARCHAR" />
    <result column="enabletime" property="enabletime" jdbcType="TIMESTAMP" />
    <result column="unenabletime" property="unenabletime" jdbcType="TIMESTAMP" />
    <result column="state" property="state" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, customid, hardwaremodel, softversion, desccontent, department, authcode, enabletime, 
    unenabletime, state
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.niule.znxj.web.model.TerminalinfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from terminalinfo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from terminalinfo
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from terminalinfo
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.niule.znxj.web.model.TerminalinfoExample" >
    delete from terminalinfo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.niule.znxj.web.model.Terminalinfo" >
    insert into terminalinfo (id, customid, hardwaremodel, 
      softversion, desccontent, department, 
      authcode, enabletime, unenabletime, 
      state)
    values (#{id,jdbcType=BIGINT}, #{customid,jdbcType=VARCHAR}, #{hardwaremodel,jdbcType=VARCHAR}, 
      #{softversion,jdbcType=VARCHAR}, #{desccontent,jdbcType=VARCHAR}, #{department,jdbcType=VARCHAR}, 
      #{authcode,jdbcType=VARCHAR}, #{enabletime,jdbcType=TIMESTAMP}, #{unenabletime,jdbcType=TIMESTAMP}, 
      #{state,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.niule.znxj.web.model.Terminalinfo" >
    insert into terminalinfo
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="customid != null" >
        customid,
      </if>
      <if test="hardwaremodel != null" >
        hardwaremodel,
      </if>
      <if test="softversion != null" >
        softversion,
      </if>
      <if test="desccontent != null" >
        desccontent,
      </if>
      <if test="department != null" >
        department,
      </if>
      <if test="authcode != null" >
        authcode,
      </if>
      <if test="enabletime != null" >
        enabletime,
      </if>
      <if test="unenabletime != null" >
        unenabletime,
      </if>
      <if test="state != null" >
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="customid != null" >
        #{customid,jdbcType=VARCHAR},
      </if>
      <if test="hardwaremodel != null" >
        #{hardwaremodel,jdbcType=VARCHAR},
      </if>
      <if test="softversion != null" >
        #{softversion,jdbcType=VARCHAR},
      </if>
      <if test="desccontent != null" >
        #{desccontent,jdbcType=VARCHAR},
      </if>
      <if test="department != null" >
        #{department,jdbcType=VARCHAR},
      </if>
      <if test="authcode != null" >
        #{authcode,jdbcType=VARCHAR},
      </if>
      <if test="enabletime != null" >
        #{enabletime,jdbcType=TIMESTAMP},
      </if>
      <if test="unenabletime != null" >
        #{unenabletime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.niule.znxj.web.model.TerminalinfoExample" resultType="java.lang.Integer" >
    select count(*) from terminalinfo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update terminalinfo
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.customid != null" >
        customid = #{record.customid,jdbcType=VARCHAR},
      </if>
      <if test="record.hardwaremodel != null" >
        hardwaremodel = #{record.hardwaremodel,jdbcType=VARCHAR},
      </if>
      <if test="record.softversion != null" >
        softversion = #{record.softversion,jdbcType=VARCHAR},
      </if>
      <if test="record.desccontent != null" >
        desccontent = #{record.desccontent,jdbcType=VARCHAR},
      </if>
      <if test="record.department != null" >
        department = #{record.department,jdbcType=VARCHAR},
      </if>
      <if test="record.authcode != null" >
        authcode = #{record.authcode,jdbcType=VARCHAR},
      </if>
      <if test="record.enabletime != null" >
        enabletime = #{record.enabletime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.unenabletime != null" >
        unenabletime = #{record.unenabletime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update terminalinfo
    set id = #{record.id,jdbcType=BIGINT},
      customid = #{record.customid,jdbcType=VARCHAR},
      hardwaremodel = #{record.hardwaremodel,jdbcType=VARCHAR},
      softversion = #{record.softversion,jdbcType=VARCHAR},
      desccontent = #{record.desccontent,jdbcType=VARCHAR},
      department = #{record.department,jdbcType=VARCHAR},
      authcode = #{record.authcode,jdbcType=VARCHAR},
      enabletime = #{record.enabletime,jdbcType=TIMESTAMP},
      unenabletime = #{record.unenabletime,jdbcType=TIMESTAMP},
      state = #{record.state,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.niule.znxj.web.model.Terminalinfo" >
    update terminalinfo
    <set >
      <if test="customid != null" >
        customid = #{customid,jdbcType=VARCHAR},
      </if>
      <if test="hardwaremodel != null" >
        hardwaremodel = #{hardwaremodel,jdbcType=VARCHAR},
      </if>
      <if test="softversion != null" >
        softversion = #{softversion,jdbcType=VARCHAR},
      </if>
      <if test="desccontent != null" >
        desccontent = #{desccontent,jdbcType=VARCHAR},
      </if>
      <if test="department != null" >
        department = #{department,jdbcType=VARCHAR},
      </if>
      <if test="authcode != null" >
        authcode = #{authcode,jdbcType=VARCHAR},
      </if>
      <if test="enabletime != null" >
        enabletime = #{enabletime,jdbcType=TIMESTAMP},
      </if>
      <if test="unenabletime != null" >
        unenabletime = #{unenabletime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.niule.znxj.web.model.Terminalinfo" >
    update terminalinfo
    set customid = #{customid,jdbcType=VARCHAR},
      hardwaremodel = #{hardwaremodel,jdbcType=VARCHAR},
      softversion = #{softversion,jdbcType=VARCHAR},
      desccontent = #{desccontent,jdbcType=VARCHAR},
      department = #{department,jdbcType=VARCHAR},
      authcode = #{authcode,jdbcType=VARCHAR},
      enabletime = #{enabletime,jdbcType=TIMESTAMP},
      unenabletime = #{unenabletime,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="findByPageTerminal" resultMap="BaseResultMap" parameterType="int">
    select
    <include refid="Base_Column_List" />
    from terminalinfo order by id desc  limit #{0},#{1}
  </select>
  <select id="countTerminal" resultType="int">
    select count(id) from terminalinfo
  </select>
  <select id="findByPageTerminal2" resultMap="BaseResultMap" parameterType="map">
    select
    <include refid="Base_Column_List" />
    from terminalinfo
    where 1=1
    <if test="name!=''">
      and customid like #{name}
    </if>
    order by id desc
    limit #{page},#{pagesize}
  </select>
  <select id="countTerminal2" resultType="int">
    select count(id) from terminalinfo where 1=1
    <if test="name!=''">
      and customid like #{name}
    </if>
  </select>
</mapper>