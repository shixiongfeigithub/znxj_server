<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.niule.znxj.web.dao.InterfaceengineMapper" >
  <resultMap id="BaseResultMap" type="com.niule.znxj.web.model.Interfaceengine" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="siteid" property="siteid" jdbcType="BIGINT" />
    <result column="ip" property="ip" jdbcType="VARCHAR" />
    <result column="port" property="port" jdbcType="VARCHAR" />
    <result column="enginetype" property="enginetype" jdbcType="VARCHAR" />
    <result column="createtime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="updatetime" property="updatetime" jdbcType="TIMESTAMP" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="sitename" property="sitename" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, siteid, ip, port, enginetype, createtime, state, updatetime
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.niule.znxj.web.model.InterfaceengineExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from interfaceengine
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>

  <select id="selectAllListBySite" resultMap="BaseResultMap" parameterType="map">
    select f.*,s.customid sitename
    from interfaceengine f
    left join siteareainfo s
    on f.siteid = s.id
    where f.state =1
    <if test="ids!=null">
      and f.siteid in
      <foreach collection="ids"  item="siteid" open="(" separator="," close=")" >
        #{siteid}
      </foreach>
    </if>
    order by f.id desc
    limit #{page},#{size}
  </select>

  <select id="countInterface" resultType="int" parameterType="map">
    select count(id) from interfaceengine where state =1
    <if test="ids!=null">
      and  siteid in
      <foreach collection="ids"  item="siteid" open="(" separator="," close=")" >
        #{siteid}
      </foreach>
    </if>
  </select>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from interfaceengine
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from interfaceengine
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.niule.znxj.web.model.InterfaceengineExample" >
    delete from interfaceengine
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.niule.znxj.web.model.Interfaceengine" >
    insert into interfaceengine (id, siteid, ip, 
      port, enginetype, createtime,
      state)
    values (#{id,jdbcType=BIGINT}, #{siteid,jdbcType=BIGINT}, #{ip,jdbcType=VARCHAR}, 
      #{port,jdbcType=VARCHAR}, #{enginetype,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP},
      #{state,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.niule.znxj.web.model.Interfaceengine" >
    insert into interfaceengine
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="siteid != null" >
        siteid,
      </if>
      <if test="ip != null" >
        ip,
      </if>
      <if test="port != null" >
        port,
      </if>
      <if test="enginetype != null" >
        enginetype,
      </if>
      <if test="createtime != null" >
        createtime,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="updatetime != null" >
        updatetime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="siteid != null" >
        #{siteid,jdbcType=BIGINT},
      </if>
      <if test="ip != null" >
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="port != null" >
        #{port,jdbcType=VARCHAR},
      </if>
      <if test="enginetype != null" >
        #{enginetype,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="updatetime != null" >
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.niule.znxj.web.model.InterfaceengineExample" resultType="java.lang.Integer" >
    select count(*) from interfaceengine
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update interfaceengine
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.siteid != null" >
        siteid = #{record.siteid,jdbcType=BIGINT},
      </if>
      <if test="record.ip != null" >
        ip = #{record.ip,jdbcType=VARCHAR},
      </if>
      <if test="record.port != null" >
        port = #{record.port,jdbcType=VARCHAR},
      </if>
      <if test="record.enginetype != null" >
        enginetype = #{record.enginetype,jdbcType=VARCHAR},
      </if>
      <if test="record.createtime != null" >
        createtime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.updatetime != null" >
        updatetime = #{record.updatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update interfaceengine
    set id = #{record.id,jdbcType=BIGINT},
      siteid = #{record.siteid,jdbcType=BIGINT},
      ip = #{record.ip,jdbcType=VARCHAR},
      port = #{record.port,jdbcType=VARCHAR},
      enginetype = #{record.enginetype,jdbcType=VARCHAR},
      createtime = #{record.createtime,jdbcType=TIMESTAMP},
      state = #{record.state,jdbcType=INTEGER},
      updatetime = #{record.updatetime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.niule.znxj.web.model.Interfaceengine" >
    update interfaceengine
    <set >
      <if test="siteid != null" >
        siteid = #{siteid,jdbcType=BIGINT},
      </if>
      <if test="ip != null" >
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="port != null" >
        port = #{port,jdbcType=VARCHAR},
      </if>
      <if test="enginetype != null" >
        enginetype = #{enginetype,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="updatetime != null" >
        updatetime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.niule.znxj.web.model.Interfaceengine" >
    update interfaceengine
    set siteid = #{siteid,jdbcType=BIGINT},
      ip = #{ip,jdbcType=VARCHAR},
      port = #{port,jdbcType=VARCHAR},
      enginetype = #{enginetype,jdbcType=VARCHAR},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=INTEGER},
      updatetime = #{updatetime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="deleteByPrimaryKey1" parameterType="java.lang.Long" >
    update interfaceengine
    set state = 0
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>