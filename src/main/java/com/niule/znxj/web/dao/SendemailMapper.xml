<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.niule.znxj.web.dao.SendemailMapper" >
  <resultMap id="BaseResultMap" type="com.niule.znxj.web.model.Sendemail" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="taskid" property="taskid" jdbcType="BIGINT" />
    <result column="contactid" property="contactid" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="pwd" property="pwd" jdbcType="VARCHAR" />
    <result column="smtp_address" property="smtpAddress" jdbcType="VARCHAR" />
    <result column="smtp_port" property="smtpPort" jdbcType="VARCHAR" />
    <result column="sendException" property="sendexception" jdbcType="INTEGER" />

    <result column="identifyingid" property="task.identifyingid" jdbcType="VARCHAR" />
    <result column="customid" property="task.customid" jdbcType="VARCHAR" />
    <result column="tasktype" property="task.type" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, taskid, contactid, state, type, email, pwd, smtp_address, smtp_port, sendException
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.niule.znxj.web.model.SendemailExample" >
    select s.*,t.identifyingid,t.customid,t.type tasktype
    from sendemail s left join taskplaninfo t on s.taskid=t.id
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from sendemail
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from sendemail
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.niule.znxj.web.model.SendemailExample" >
    delete from sendemail
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.niule.znxj.web.model.Sendemail" >
    insert into sendemail (id, taskid, contactid, 
      state, type, email, 
      pwd, smtp_address, smtp_port, 
      sendException)
    values (#{id,jdbcType=BIGINT}, #{taskid,jdbcType=BIGINT}, #{contactid,jdbcType=VARCHAR}, 
      #{state,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, #{email,jdbcType=VARCHAR}, 
      #{pwd,jdbcType=VARCHAR}, #{smtpAddress,jdbcType=VARCHAR}, #{smtpPort,jdbcType=VARCHAR}, 
      #{sendexception,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.niule.znxj.web.model.Sendemail" >
    insert into sendemail
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="taskid != null" >
        taskid,
      </if>
      <if test="contactid != null" >
        contactid,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="pwd != null" >
        pwd,
      </if>
      <if test="smtpAddress != null" >
        smtp_address,
      </if>
      <if test="smtpPort != null" >
        smtp_port,
      </if>
      <if test="sendexception != null" >
        sendException,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="taskid != null" >
        #{taskid,jdbcType=BIGINT},
      </if>
      <if test="contactid != null" >
        #{contactid,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="pwd != null" >
        #{pwd,jdbcType=VARCHAR},
      </if>
      <if test="smtpAddress != null" >
        #{smtpAddress,jdbcType=VARCHAR},
      </if>
      <if test="smtpPort != null" >
        #{smtpPort,jdbcType=VARCHAR},
      </if>
      <if test="sendexception != null" >
        #{sendexception,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.niule.znxj.web.model.SendemailExample" resultType="java.lang.Integer" >
    select count(*) from sendemail
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update sendemail
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.taskid != null" >
        taskid = #{record.taskid,jdbcType=BIGINT},
      </if>
      <if test="record.contactid != null" >
        contactid = #{record.contactid,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.email != null" >
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.pwd != null" >
        pwd = #{record.pwd,jdbcType=VARCHAR},
      </if>
      <if test="record.smtpAddress != null" >
        smtp_address = #{record.smtpAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.smtpPort != null" >
        smtp_port = #{record.smtpPort,jdbcType=VARCHAR},
      </if>
      <if test="record.sendexception != null" >
        sendException = #{record.sendexception,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update sendemail
    set id = #{record.id,jdbcType=BIGINT},
      taskid = #{record.taskid,jdbcType=BIGINT},
      contactid = #{record.contactid,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=INTEGER},
      type = #{record.type,jdbcType=INTEGER},
      email = #{record.email,jdbcType=VARCHAR},
      pwd = #{record.pwd,jdbcType=VARCHAR},
      smtp_address = #{record.smtpAddress,jdbcType=VARCHAR},
      smtp_port = #{record.smtpPort,jdbcType=VARCHAR},
      sendException = #{record.sendexception,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.niule.znxj.web.model.Sendemail" >
    update sendemail
    <set >
      <if test="taskid != null" >
        taskid = #{taskid,jdbcType=BIGINT},
      </if>
      <if test="contactid != null" >
        contactid = #{contactid,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="pwd != null" >
        pwd = #{pwd,jdbcType=VARCHAR},
      </if>
      <if test="smtpAddress != null" >
        smtp_address = #{smtpAddress,jdbcType=VARCHAR},
      </if>
      <if test="smtpPort != null" >
        smtp_port = #{smtpPort,jdbcType=VARCHAR},
      </if>
      <if test="sendexception != null" >
        sendException = #{sendexception,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.niule.znxj.web.model.Sendemail" >
    update sendemail
    set taskid = #{taskid,jdbcType=BIGINT},
      contactid = #{contactid,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      email = #{email,jdbcType=VARCHAR},
      pwd = #{pwd,jdbcType=VARCHAR},
      smtp_address = #{smtpAddress,jdbcType=VARCHAR},
      smtp_port = #{smtpPort,jdbcType=VARCHAR},
      sendException = #{sendexception,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>