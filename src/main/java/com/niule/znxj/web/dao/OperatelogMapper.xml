<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.niule.znxj.web.dao.OperatelogMapper" >
  <resultMap id="BaseResultMap" type="com.niule.znxj.web.model.Operatelog" >
    <id column="logid" property="logid" jdbcType="INTEGER" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="operate" property="operate" jdbcType="VARCHAR" />
    <result column="time" property="time" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    logid, username, operate, time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap">
    select *
    from operatelog
    order by time desc
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from operatelog
    where logid = #{logid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from operatelog
    where logid = #{logid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.niule.znxj.web.model.OperatelogExample" >
    delete from operatelog
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.niule.znxj.web.model.Operatelog" >
    insert into operatelog (logid, username, operate, 
      time)
    values (#{logid,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{operate,jdbcType=VARCHAR}, 
      #{time,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.niule.znxj.web.model.Operatelog" >
    insert into operatelog
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="logid != null" >
        logid,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="operate != null" >
        operate,
      </if>
      <if test="time != null" >
        time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="logid != null" >
        #{logid,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="operate != null" >
        #{operate,jdbcType=VARCHAR},
      </if>
      <if test="time != null" >
        #{time,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.niule.znxj.web.model.OperatelogExample" resultType="java.lang.Integer" >
    select count(*) from operatelog
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update operatelog
    <set >
      <if test="record.logid != null" >
        logid = #{record.logid,jdbcType=INTEGER},
      </if>
      <if test="record.username != null" >
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.operate != null" >
        operate = #{record.operate,jdbcType=VARCHAR},
      </if>
      <if test="record.time != null" >
        time = #{record.time,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update operatelog
    set logid = #{record.logid,jdbcType=INTEGER},
      username = #{record.username,jdbcType=VARCHAR},
      operate = #{record.operate,jdbcType=VARCHAR},
      time = #{record.time,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.niule.znxj.web.model.Operatelog" >
    update operatelog
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="operate != null" >
        operate = #{operate,jdbcType=VARCHAR},
      </if>
      <if test="time != null" >
        time = #{time,jdbcType=TIMESTAMP},
      </if>
    </set>
    where logid = #{logid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.niule.znxj.web.model.Operatelog" >
    update operatelog
    set username = #{username,jdbcType=VARCHAR},
      operate = #{operate,jdbcType=VARCHAR},
      time = #{time,jdbcType=TIMESTAMP}
    where logid = #{logid,jdbcType=INTEGER}
  </update>
  <select id="findByPage" resultMap="BaseResultMap" parameterType="map">
    select <include refid="Base_Column_List" />
    from operatelog
    where 1=1
    <if test="username!=null and username!=''">
      and username like  #{username}
    </if>
    <if test="time2!=null and time2!=''">
      and str_to_date(time,'%Y-%m-%d')=str_to_date(#{time2},'%Y-%m-%d')
    </if>
    order by time desc
  </select>
</mapper>